package com.leetsoft.weremobile;

import android.annotation.SuppressLint;
import android.app.Dialog;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.leetsoft.weremobile.adapters.DocumentRowsAdapter;
import com.leetsoft.weremobile.database.Contragents;
import com.leetsoft.weremobile.database.DatabaseHelper;
import com.leetsoft.weremobile.database.DocumentRows;
import com.leetsoft.weremobile.database.Documents;
import com.leetsoft.weremobile.database.Lots;
import com.leetsoft.weremobile.database.Products;
import com.leetsoft.weremobile.interfaces.OnCreateDocumentRowButtonClickListener;
import com.leetsoft.weremobile.util.DataUtil;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Created by Georgi Shukov on 20.11.2020 Ð³..
 */

public class CreateDocumentActivity extends AppCompatActivity {

    DatabaseHelper db = new DatabaseHelper(this);
    DataUtil dataUtil = new DataUtil();

    private Spinner supplierSpinner, destinationSpinner;
    private Button btnSave, btnAddRow;
    private TextView sumTV;

    private List<String> contragentsNameList = new ArrayList<>();
    private List<Contragents> contragentsList = new ArrayList<>();

    private List<String> productsNameList = new ArrayList<>();
    private List<Products> productsList = new ArrayList<>();

    private List<String> lotsStringList = new ArrayList<>();
    private List<Lots> lotsList = new ArrayList<>();

    private List<String> lotIdValues = new ArrayList<>();
    private List<DocumentRows> documentRows = new ArrayList<>();

    private int documentID = 0;
    private int productID = 0;
    private double sum = 0;

    DocumentRowsAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_create_document);

        supplierSpinner = findViewById(R.id.supplierSpinner);
        destinationSpinner = findViewById(R.id.destinationSpinner);
        btnSave = findViewById(R.id.btnSave);
        btnAddRow = findViewById(R.id.btnAddRow);
        sumTV = findViewById(R.id.sumTextView);


        contragentsList = db.getAllContragents();

        for (Contragents contragent : contragentsList) {
            contragentsNameList.add(contragent.getName());
        }

        productsList = db.getAllProducts();

        for (Products product : productsList) {
            productsNameList.add(product.getName());
        }

        lotsList = db.getAllLots();
        documentID = getDocumentNumber();

        addItemsOnSupplierSpinner();
        addItemsOnDestinationSpinner();


        btnSave.setOnClickListener(v -> {

            Documents document = new Documents();
            int supplierID = getSupplierId();
            int destinationID = getDestinationId();
            Date date = new Date();


            document.setSource_id(supplierID);
            document.setDestination_id(destinationID);
            document.setDate(date);
            document.setDocument_number(documentID);

            db.addDocument(document);

            Toast.makeText(CreateDocumentActivity.this,
                    "Document saved in database with number " + document.getDocument_number(),
                    Toast.LENGTH_SHORT).show();
        });

        btnAddRow.setOnClickListener(v -> {
            showAddRowDialog();
            updateRows(documentID);
            /*RecyclerView recyclerView = findViewById(R.id.document_row_recycler_view);
            adapter = new DocumentRowsAdapter(getParent(), documentRows);
            adapter.notifyDataSetChanged();
            recyclerView.setAdapter(adapter);
            recyclerView.setLayoutManager(new LinearLayoutManager(getParent()));*/
        });
    }


    //document number generator based on date
    private int getDocumentNumber() {
        int value = db.getDocumentCount();
        @SuppressLint("SimpleDateFormat") String date = new SimpleDateFormat("ddMMyyy").format(new Date());
        String inv = date + value;
        return Integer.parseInt(inv);
    }

    private int getSupplierId() {
        int id = 0;
        for (Contragents contragent : contragentsList) {
            if (contragent.getName().trim().equals(supplierSpinner.getSelectedItem().toString())) {
                id = contragent.getId();
            }
        }
        return id;
    }

    private int getDestinationId() {
        int id = 0;
        for (Contragents contragent : contragentsList) {
            if (contragent.getName().trim().equals(destinationSpinner.getSelectedItem().toString())) {
                id = contragent.getId();
            }
        }
        return id;
    }

    //using for logo at top right corner
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu, menu);
        return true;
    }

    public void addItemsOnDestinationSpinner() {
        ArrayAdapter<String> dataAdapter = new ArrayAdapter<>(this,
                android.R.layout.simple_spinner_item, contragentsNameList);
        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        destinationSpinner.setAdapter(dataAdapter);
    }

    public void addItemsOnSupplierSpinner() {
        ArrayAdapter<String> dataAdapter = new ArrayAdapter<>(this,
                android.R.layout.simple_spinner_item, contragentsNameList);
        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        supplierSpinner.setAdapter(dataAdapter);
    }

    private void showAddRowDialog() {
        final Dialog dialog = new Dialog(CreateDocumentActivity.this);
        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        dialog.setContentView(R.layout.custom_document_row_dialog);
        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
        dialog.setCancelable(true);

        final Spinner lotSpinner = dialog.findViewById(R.id.lotSpinner);
        final Spinner productSpinner = dialog.findViewById(R.id.productSpinner);
        final Button btnAddRowDialog = dialog.findViewById(R.id.btnAddRowDialog);
        final EditText quantityEditText = dialog.findViewById(R.id.quantityEditText);

        ArrayAdapter<String> dataAdapter = new ArrayAdapter<>(this,
                android.R.layout.simple_spinner_item, productsNameList);
        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        productSpinner.setAdapter(dataAdapter);

        ArrayAdapter<String> dataLotAdapter = new ArrayAdapter<>(this,
                android.R.layout.simple_spinner_item, lotsStringList);
        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        lotSpinner.setAdapter(dataLotAdapter);
        lotSpinner.setId(0);

        productSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                lotsStringList.clear();
                lotIdValues.clear();


                for (Products product : productsList) {
                    if (product.getName().trim().equals(productSpinner.getSelectedItem().toString())) {
                        productID = product.getId();
                    }
                }

                for (Lots lot : lotsList) {
                    if (productID == lot.getProduct_id()) {
                        lotsStringList.add("LN: " + lot.getLot_number() + " Quantity: " + lot.getQuantity());
                        lotIdValues.add(String.valueOf(lot.getLot_number()));
                    }
                }
                // SubCategories
                dataLotAdapter.notifyDataSetChanged();
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }

        });


        btnAddRowDialog.setOnClickListener(v -> {

            String quantityStr = quantityEditText.getText().toString();
            double quantity = Double.parseDouble(quantityStr);

            DocumentRows row = new DocumentRows();
            row.setDocument_id(documentID);
            row.setQuantity(quantity);
            row.setProduct_id(productID);
            String lot_id = lotIdValues.get(lotSpinner.getSelectedItemPosition());
            row.setLot_id(Integer.parseInt(lot_id));
            double price = 0;
            for (Products product : productsList) {
                if (product.getId() == productID) {
                    price = product.getPrice();
                }
            }
            row.setSum(dataUtil.round(quantity * price, 2));

            db.addDocumentRow(row);

            for (Lots lot : lotsList) {
                if (lot.getLot_number().equals(lot_id)) {
                    double lotQuantity = lot.getQuantity();
                    lot.setQuantity(lotQuantity - quantity);
                    db.updateLot(lot);
                }
            }
            adapter.notifyDataSetChanged();
            updateRows(documentID);
            dialog.dismiss();
        });
        dialog.show();
    }

    private void updateRows(int id) {
        documentRows = db.getAllDocumentRows(id);
        sum = 0;
        for (DocumentRows documentRows : documentRows) {
            sum = sum + documentRows.getSum();
        }
        sumTV.setText("Sum: " + dataUtil.round(sum, 2));
        RecyclerView recyclerView = findViewById(R.id.document_row_recycler_view);
        adapter = new DocumentRowsAdapter(this, documentRows, listener);
        adapter.notifyDataSetChanged();
        recyclerView.setAdapter(adapter);
        recyclerView.setLayoutManager(new LinearLayoutManager(getParent()));
    }

    private void showEditRowDialog(DocumentRows row) {
        final Dialog dialog = new Dialog(CreateDocumentActivity.this);
        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        dialog.setContentView(R.layout.custom_document_row_edit);
        dialog.getWindow().setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
        dialog.setCancelable(true);

        final TextView productName = dialog.findViewById(R.id.productTextView);
        final Spinner lotID = dialog.findViewById(R.id.lotTextView);
        final Button btnEditRowDialog = dialog.findViewById(R.id.btnEditRowDialog);
        final EditText quantityEditText = dialog.findViewById(R.id.newQuantityEditText);

        //productName

        btnEditRowDialog.setOnClickListener(v -> {

            String quantityStr = quantityEditText.getText().toString();
            double quantity = Double.parseDouble(quantityStr);

            dialog.dismiss();
        });
        dialog.show();
    }


    OnCreateDocumentRowButtonClickListener listener = new OnCreateDocumentRowButtonClickListener() {
        @Override
        public void onDeleteClicked() {
            updateRows(documentID);
        }

        @Override
        public void updateQuantity(DocumentRows row) {
            for (Lots lot : lotsList) {
                if (Integer.parseInt(lot.getLot_number()) == row.getLot_id()){
                    lot.setQuantity(lot.getQuantity() + row.getQuantity());
                    db.updateLot(lot);
                }
            }
        }

        @Override
        public void onEdidClicked(DocumentRows row, int position) {
            showEditRowDialog(row);
        }
    };


}